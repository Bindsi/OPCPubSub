{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ASAApiVersion": {
      "type": "string"
    },
    "StreamAnalyticsJobName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Stream Analytics job name can contain alphanumeric characters, hyphens, and underscores only and must be 3-63 characters long."
      }
    },
    "Location": {
      "type": "string"
    },
    "OutputStartMode": {
      "type": "string",
      "allowedValues": [
        "JobStartTime",
        "CustomTime",
        "LastOutputEventTime"
      ]
    },
    "OutputStartTime": {
      "type": "string"
    },
    "DataLocale": {
      "type": "string"
    },
    "OutputErrorPolicy": {
      "type": "string",
      "allowedValues": [
        "Drop",
        "Stop"
      ]
    },
    "EventsLateArrivalMaxDelayInSeconds": {
      "type": "int"
    },
    "EventsOutOfOrderMaxDelayInSeconds": {
      "type": "int"
    },
    "EventsOutOfOrderPolicy": {
      "type": "string",
      "allowedValues": [
        "Adjust",
        "Drop"
      ]
    },
    "StreamingUnits": {
      "type": "int",
      "minValue": 1,
      "maxValue": 396,
      "metadata": {
        "description": "Number of Streaming Units"
      },
      "allowedValues": [
        1,
        3,
        6,
        12,
        18,
        24,
        30,
        36,
        42,
        48,
        54,
        60,
        66,
        72,
        78,
        84,
        90,
        96,
        102,
        108,
        114,
        120,
        126,
        132,
        138,
        144,
        150,
        156,
        162,
        168,
        174,
        180,
        186,
        192,
        198,
        204,
        210,
        216,
        222,
        228,
        234,
        240,
        246,
        252,
        258,
        264,
        270,
        276,
        282,
        288,
        294,
        300,
        306,
        312,
        318,
        324,
        330,
        336,
        342,
        348,
        354,
        360,
        366,
        372,
        378,
        384,
        390,
        396
      ]
    },
    "CompatibilityLevel": {
      "type": "string",
      "allowedValues": [
        "1.0",
        "1.1",
        "1.2"
      ]
    },
    "ContentStoragePolicy": {
      "type": "string",
      "allowedValues": [
        "SystemAccount",
        "JobStorageAccount"
      ]
    },
    "Input_IoTHub_iotHubNamespace": {
      "type": "string"
    },
    "Input_IoTHub_consumerGroupName": {
      "type": "string"
    },
    "Input_IoTHub_endpoint": {
      "type": "string"
    },
    "Input_IoTHub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Input_IoTHub_sharedAccessPolicyKey": {
      "type": "string"
    },
    "Output_EventHub_serviceBusNamespace": {
      "type": "string"
    },
    "Output_EventHub_eventHubName": {
      "type": "string"
    },
    "Output_EventHub_partitionKey": {
      "type": "string"
    },
    "Output_EventHub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Output_EventHub_sharedAccessPolicyKey": {
      "type": "string"
    },
    "Output_EventHub_authenticationMode": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "[parameters('ASAApiVersion')]",
      "name": "[parameters('StreamAnalyticsJobName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "outputStartMode": "[parameters('OutputStartMode')]",
        "outputStartTime": "[if(equals(parameters('OutputStartMode'),'CustomTime'), parameters('OutputStartTime'), json('null'))]",
        "sku": {
          "name": "standard"
        },
        "jobType": "Cloud",
        "eventsOutOfOrderPolicy": "[parameters('EventsOutOfOrderPolicy')]",
        "outputErrorPolicy": "[parameters('OutputErrorPolicy')]",
        "eventsOutOfOrderMaxDelayInSeconds": "[parameters('EventsOutOfOrderMaxDelayInSeconds')]",
        "eventsLateArrivalMaxDelayInSeconds": "[parameters('EventsLateArrivalMaxDelayInSeconds')]",
        "dataLocale": "[parameters('DataLocale')]",
        "compatibilityLevel": "[parameters('CompatibilityLevel')]",
        "contentStoragePolicy": "[parameters('ContentStoragePolicy')]",
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[parameters('StreamingUnits')]",
            "query": "\n-- Before you begin\n-- 1. Add input: right-click the Inputs folder and select \"ASA: Add Input\" to prepare your input data.\n-- 2. Add output: right-click the Outputs folder and select \"ASA: Add Output\" to choose your sink type.\n-- 3. Edit your query below and start testing your ASA job locally.\n-- For more information, please visit: https://docs.microsoft.com/en-us/azure/stream-analytics/quick-create-visual-studio-code\n\nWITH PubSubFlattened AS (\n    SELECT ih.*, \n\t\tih.IoTHub.ConnectionDeviceId,\n        payload.PropertyValue.StatusCode.Code AS ValueStatusCode,\n        payload.PropertyValue.StatusCode.Symbol AS ValueStatusCodeSymbol,\n        payload.PropertyName AS PayloadName,\n        payload.PropertyValue.Value AS PayloadValue,\n        payload.PropertyValue.SourceTimestamp AS PayloadSourceTimestamp,\n        payload.PropertyValue.ServerTimestamp AS PayloadServerTimestamp\n        FROM IoTHub AS ih\n        CROSS APPLY GetArrayElements(ih.Messages) as msg -- GetArrayElements: https://docs.microsoft.com/en-us/stream-analytics-query/getarrayelements-azure-stream-analytics\n        CROSS APPLY GetRecordProperties(msg.ArrayValue.Payload) AS payload -- GetRecordProperties: https://docs.microsoft.com/en-us/stream-analytics-query/getrecordproperties-azure-stream-analytics\n        WHERE ih.PublisherId IS NOT NULL --identifier in message for PubSub format, not available in Sample format\n        AND ih.MessageType IS NOT NULL --identifier in message for PubSub format, not available in Sample format\n),\nPubSub AS (\n    SELECT\n        --mm.NodeId as NodeId,\n        NULL AS ApplicationUri,\n        PubSubFlattened.EndpointUrl,\n        PubSubFlattened.ValueStatusCode,\n        PubSubFlattened.ValueStatusCodeSymbol,\n        PubSubFlattened.ConnectionDeviceId AS IoTHubDeviceId,\n        PubSubFlattened.PayloadSourceTimestamp as SourceTimestamp,\n        PubSubFlattened.PayloadValue as Value\n    FROM PubSubFlattened\n    --LEFT JOIN ReferenceData mm --sample: add reference data based on SignalId from database metadata\n    --ON PubSubFlattened.PayloadName = mm.SignalId\n),\nSample AS (\n    SELECT\n        --ih.NodeId,\n        ih.ApplicationUri, \n        ih.EndpointUrl,\n        ih.Value.StatusCode.Code AS ValueStatusCode,\n        ih.Value.StatusCode.Symbol AS ValueStatusCodeSymbol,\n        ih.IoTHub.ConnectionDeviceId AS IoTHubDeviceId,\n        ih.Value.SourceTimestamp,\n        ih.Value.Value\n\tFROM IoTHub as ih\n    --LEFT JOIN ReferenceData mm --sample: add reference data based on EndpointUrl and NodeId from database metadata\n    --ON (LOWER(ih.EndpointUrl) = LOWER(mm.EndpointUrl) OR LOWER(ih.EndpointUrl) = LOWER(CONCAT(mm.EndpointUrl, '/'))) AND ih.NodeId = mm.NodeId\n),\nEnrichedData AS (\n    SELECT * FROM PubSub\n    UNION\n    SELECT * FROM Sample\n)\n\nSELECT\n\t*\nINTO\n\t[EventHub]\nFROM\n\tEnrichedData"
          }
        },
        "inputs": [
          {
            "name": "IoTHub",
            "properties": {
              "type": "Stream",
              "datasource": {
                "type": "Microsoft.Devices/IotHubs",
                "properties": {
                  "iotHubNamespace": "[parameters('Input_IoTHub_iotHubNamespace')]",
                  "consumerGroupName": "[parameters('Input_IoTHub_consumerGroupName')]",
                  "endpoint": "[parameters('Input_IoTHub_endpoint')]",
                  "sharedAccessPolicyName": "[parameters('Input_IoTHub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Input_IoTHub_sharedAccessPolicyKey')]"
                }
              },
              "compression": {
                "type": "None"
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8"
                }
              }
            }
          }
        ],
        "outputs": [
          {
            "name": "EventHub",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[parameters('Output_EventHub_serviceBusNamespace')]",
                  "eventHubName": "[parameters('Output_EventHub_eventHubName')]",
                  "partitionKey": "[parameters('Output_EventHub_partitionKey')]",
                  "sharedAccessPolicyName": "[parameters('Output_EventHub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Output_EventHub_sharedAccessPolicyKey')]",
                  "authenticationMode": "[parameters('Output_EventHub_authenticationMode')]"
                }
              }
            }
          }
        ]
      }
    }
  ]
}